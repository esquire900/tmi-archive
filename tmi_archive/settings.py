"""
Django settings for tmi_archive project.

Generated by 'django-admin startproject' using Django 3.1.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import os
from pathlib import Path

import sentry_sdk
from dotenv import load_dotenv, find_dotenv
from sentry_sdk.integrations.django import DjangoIntegration

load_dotenv(find_dotenv(), interpolate=False, override=True)

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve(strict=True).parent.parent

SECRET_KEY = os.getenv('SECRET_KEY')
DEBUG = os.getenv('DEBUG') == 'on'
PRODUCTION = os.getenv('PRODUCTION', 'on') == 'on'

ALLOWED_HOSTS = ['127.0.0.1', '192.168.178.72', '0.0.0.0', 'tmi-archive.com', 'www.tmi-archive.com',
                 'https://tmi-archive.com']
INTERNAL_IPS = ['127.0.0.1', '192.168.178.72', '0.0.0.0']

# CSRF_TRUSTED_ORIGINS = ['https://www.tmi-archive.com', 'http://www.tmi-archive.com',
#                  'https://tmi-archive.com', 'http://tmi-archive.com']

# Application definition

INSTALLED_APPS = [

    'reversion',
    # 'reversion_compare',
    'talks',
    'bootstrap4',
    'allauth',
    'allauth.account',
    'allauth.socialaccount',
    'crispy_forms',
    'tinymce',
    'adminsortable2',
    'django_select2',
    'fullurl',
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.sites',
    'django.contrib.staticfiles',
    'rest_framework',
    'django.contrib.postgres'
]
CRISPY_TEMPLATE_PACK = 'bootstrap4'
SITE_ID = 1
# AUTH_USER_MODEL = `users.CustomUser`
MIDDLEWARE = [
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    'crum.CurrentRequestUserMiddleware',
    'reversion.middleware.RevisionMiddleware',
]

AUTHENTICATION_BACKENDS = [
    'django.contrib.auth.backends.ModelBackend',
    'allauth.account.auth_backends.AuthenticationBackend',
]

ROOT_URLCONF = 'tmi_archive.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates'), os.path.join(BASE_DIR, 'templates', 'allauth')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]
# LOGIN_REDIRECT_URL = '/'
WSGI_APPLICATION = 'tmi_archive.wsgi.application'
ACCOUNT_EMAIL_VERIFICATION = 'none'
DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'
TAGGIT_CASE_INSENSITIVE = True
# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'UTC'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_URL = 'https://static.tmi-archive.com/' if PRODUCTION else '/static/'
STATIC_ROOT = './static/'

STATICFILES_DIRS = [
    os.path.join(BASE_DIR, "static_custom"),

]
MEDIA_ROOT = os.path.join(BASE_DIR, 'runtime/')
MEDIA_URL = 'https://mp3.tmi-archive.com/'

DEFAULT_FILE_STORAGE = 'storages.backends.s3boto3.S3Boto3Storage'
AWS_ACCESS_KEY_ID = os.getenv('B2_USER')
AWS_SECRET_ACCESS_KEY = os.getenv('B2_KEY')
AWS_STORAGE_BUCKET_NAME = os.getenv('B2_BUCKET')
AWS_S3_ENDPOINT_URL = 'https://tmi-archive.s3.us-west-002.backblazeb2.com'
AWS_S3_CUSTOM_DOMAIN = 'f002.backblazeb2.com/file/tmi-archive/tmi-archive'

BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.postgresql',
        'NAME': os.getenv('DB_NAME'),
        'USER': os.getenv('DB_USER'),
        'PASSWORD': os.getenv('DB_PASS'),
        'HOST': os.getenv('DB_HOST'),
        'PORT': os.getenv('DB_PORT'),
    }

}

if os.getenv('SENTRY_DSN'):
    sentry_sdk.init(
        dsn=os.getenv('SENTRY_DSN'),
        integrations=[DjangoIntegration()],
        traces_sample_rate=1.0,
        send_default_pii=True
    )

SECURE_SSL_REDIRECT = PRODUCTION
SECURE_PROXY_SSL_HEADER = ('HTTP_X_FORWARDED_PROTO', 'https')
CACHES = {
    'default': {
        'BACKEND': 'django.core.cache.backends.filebased.FileBasedCache',
        'LOCATION': '/var/tmp/django_cache',
    }
}

REST_FRAMEWORK = {
    'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.LimitOffsetPagination',
    'PAGE_SIZE': 50
}
